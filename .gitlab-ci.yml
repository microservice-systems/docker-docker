stages:
  - Build
  - Push

variables:
  REGISTRY: ""
  GROUP: "micsys"
  APPLICATION: "docker"
  VERSION: "20.10.10"
  REVISION: "$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA"
  NAME: "Docker"
  DESCRIPTION: "Docker in Docker Image"
  REPOSITORY: "$CI_PROJECT_URL"
  REPOSITORY_TYPE: "GITLAB"
  JOB: "$CI_JOB_URL"
  JOB_TYPE: "GITLAB"
  PIPELINE: "$CI_PIPELINE_URL"
  PIPELINE_TYPE: "GITLAB"
  BRANCH: "$CI_COMMIT_REF_NAME"
  COMMIT: "$CI_COMMIT_SHA"
  COMMIT_BEFORE: "$CI_COMMIT_BEFORE_SHA"
  COMMIT_MESSAGE: "$CI_COMMIT_MESSAGE"
  MAINTAINER: "$GITLAB_USER_LOGIN"
  MAINTAINER_NAME: "$GITLAB_USER_NAME"
  MAINTAINER_EMAIL: "$GITLAB_USER_EMAIL"

.build-docker-before-script:
  before_script:
    - set -e
    - apk add --no-cache uuidgen
    - export BUILD="$(uuidgen)"
    - printf "%s\n"
             "REGISTRY=$REGISTRY"
             "GROUP=$GROUP"
             "APPLICATION=$APPLICATION"
             "VERSION=$VERSION"
             "REVISION=$REVISION"
             "BUILD=$BUILD"
             "NAME=$NAME"
             "DESCRIPTION=$DESCRIPTION"
             "REPOSITORY=$REPOSITORY"
             "REPOSITORY_TYPE=$REPOSITORY_TYPE"
             "JOB=$JOB"
             "JOB_TYPE=$JOB_TYPE"
             "PIPELINE=$PIPELINE"
             "PIPELINE_TYPE=$PIPELINE_TYPE"
             "BRANCH=$BRANCH"
             "COMMIT=$COMMIT"
             "COMMIT_BEFORE=$COMMIT_BEFORE"
             "COMMIT_MESSAGE=$COMMIT_MESSAGE"
             "MAINTAINER=$MAINTAINER"
             "MAINTAINER_NAME=$MAINTAINER_NAME"
             "MAINTAINER_EMAIL=$MAINTAINER_EMAIL"
    - docker build --no-cache --file ./Dockerfile
                              --build-arg registry="$REGISTRY"
                              --build-arg group="$GROUP"
                              --build-arg application="$APPLICATION"
                              --build-arg version="$VERSION"
                              --build-arg revision="$REVISION"
                              --build-arg build="$BUILD"
                              --build-arg name="$NAME"
                              --build-arg description="$DESCRIPTION"
                              --build-arg repository="$REPOSITORY"
                              --build-arg repository_type="$REPOSITORY_TYPE"
                              --build-arg job="$JOB"
                              --build-arg job_type="$JOB_TYPE"
                              --build-arg ci_pipeline_url="$PIPELINE"
                              --build-arg ci_commit_branch="$BRANCH"
                              --build-arg ci_commit_sha="$COMMIT"
                              --build-arg ci_commit_before_sha="$COMMIT_BEFORE"
                              --build-arg ci_commit_message="$COMMIT_MESSAGE"
                              --build-arg maintainer="$MAINTAINER"
                              --build-arg maintainer_name="$MAINTAINER_NAME"
                              --build-arg maintainer_email="$MAINTAINER_EMAIL"
                              --tag $REGISTRY$GROUP/$APPLICATION:$VERSION .

docker:
  stage: Build
  image: docker:20.10.11
  when: on_success
  extends: .build-docker-before-script
  script:
    - set -e
    - docker rmi $(docker images --filter "label=build=$BUILD" -q)
  tags:
    - docker

registry:
  stage: Push
  image: docker:20.10.11
  when: manual
  extends: .build-docker-before-script
  script:
    - set -e
    - mkdir -p ~/.docker
    - echo $REGISTRY_AUTH > ~/.docker/config.json
    - docker push $REGISTRY$GROUP/$APPLICATION:$VERSION
    - docker rmi $(docker images --filter "label=build=$BUILD" -q)
  only:
    - tags
    - release/*
  tags:
    - docker
